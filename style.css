html {
  box-sizing: border-box;
  background: #90caf9;
  font-family: 'helvetica neue';
  font-size: 20px;
  font-weight: 200;
}

body {
  margin: 0;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

.panels {
  min-height: 100vh;
  overflow: hidden;
  display: flex;
}

.panel {
  background: #64b5f6;
  box-shadow: inset 0 0 0 5px rgba(255, 255, 255, 0.1);
  color: white;
  text-align: center;
  align-items: center;
  /* Safari transitionend event.propertyName === flex */
  /* Chrome + FF transitionend event.propertyName === flex-grow */
  transition: font-size 0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11),
    flex 0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11), background 0.2s;
  font-size: 20px;
  background-size: cover;
  background-position: center;
  /* Setting flex-grow to 1; flex-grow property specifies how much of the remaining space in the flex container should be assigned to the item (the flex grow factor) */
  /* This makes each text container take equal amount of space within panel, filling all available space - evenly distribute extra room */
  flex: 1;
  /* Every element can be both a flex item and a flex container, as is the case here (there are flex items within panel, which is being made into a flex container, but panel is a flex item within .panels div) */
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.panel1 {
  background-image: url(https://source.unsplash.com/YFFGkE3y4F8);
}
.panel2 {
  background-image: url(https://source.unsplash.com/ktZZiHb-GoI);
}
.panel3 {
  background-image: url(https://source.unsplash.com/1EYMue_AwDw);
}
.panel4 {
  background-image: url(https://source.unsplash.com/dvACrXUExLs);
}
.panel5 {
  background-image: url(https://source.unsplash.com/4V8JxijgZ_c);
}

/* Flex items */
.panel > * {
  margin: 0;
  width: 100%;
  transition: transform 0.5s;
  flex: 1;
  /* Aligning text within text containers (p elements) */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* first-child pseudo-class (a pseudo-class specifies a special state of the selected element(s)) represents first element among a group of sibling elements */
.panel > *:first-child {
  /* Moves them upward, off screen */
  transform: translateY(-100%);
}

.panel.open-active > *:first-child {
  transform: translateY(0);
}

.panel > *:last-child {
  /* Moves them downward, off screen */
  transform: translateY(100%);
}

.panel.open-active > *:last-child {
  transform: translateY(0);
}

.panel p {
  text-transform: uppercase;
  font-family: 'Amatic SC', cursive;
  text-shadow: 0 0 4px rgba(0, 0, 0, 0.72), 0 0 14px rgba(0, 0, 0, 0.45);
  font-size: 2em;
}

.panel p:nth-child(2) {
  font-size: 4em;
}

.panel.open {
  font-size: 40px;
  flex: 5;
}
